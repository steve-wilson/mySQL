DROP TABLE IF EXISTS t1;
# Verifying that X_LOCK not acquired
CREATE TABLE t1 (a INT PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
CREATE TABLE t2 (a INT PRIMARY KEY, b int) ENGINE=InnoDB;
INSERT INTO t2 VALUES (1,1);
SET innodb_fake_changes=1;
SET autocommit=0;
SET innodb_fake_changes=1;
BEGIN;
SELECT * FROM t1 FOR UPDATE;
a
1
SET innodb_lock_wait_timeout=3;
UPDATE t1 SET a=2;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SELECT * FROM t1 LOCK IN SHARE MODE;
a
1
ROLLBACK;
# Confirm no lock wait timeouts
SET global innodb_fake_changes_locks=0;
BEGIN;
SELECT * FROM t1 FOR UPDATE;
a
1
SET innodb_lock_wait_timeout=300;
BEGIN;
UPDATE t1 SET a=2;
SELECT * FROM t1 LOCK IN SHARE MODE;
a
1
ROLLBACK;
ROLLBACK;
# Confirm that fake UPDATE doesn't hold a lock
BEGIN;
SELECT * FROM t1 FOR UPDATE;
a
1
set innodb_fake_changes=0;
BEGIN;
UPDATE t1 SET a=3 WHERE a=1;
ROLLBACK;
ROLLBACK;
BEGIN;
UPDATE t1 SET a=3 WHERE a=1;
BEGIN;
UPDATE t1 SET a=3 WHERE a=1;
ROLLBACK;
# Confirm that fake INSERT doesn't hold a lock
ROLLBACK;
BEGIN;
INSERT INTO t1 values (4);
BEGIN;
INSERT INTO t1 values (4);
ROLLBACK;
# Confirm that fake DELETE doesn't hold a lock
ROLLBACK;
BEGIN;
DELETE FROM t1 WHERE a=1;
BEGIN;
DELETE FROM t1 WHERE a=1;
ROLLBACK;
# Confirm that fake REPLACE doesn't hold a lock
ROLLBACK;
BEGIN;
REPLACE INTO t2 values (1,2);
BEGIN;
REPLACE INTO t2 values (1,2);
ROLLBACK;
ROLLBACK;
SELECT * FROM t1;
a
1
SELECT * FROM t2;
a	b
1	1
SET global innodb_fake_changes_locks=default;
SET innodb_fake_changes=default;
DROP TABLE t1;
DROP TABLE t2;
